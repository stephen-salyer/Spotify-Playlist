{"ast":null,"code":"import _classCallCheck from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/src/Components/App/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Spotify from '../../Util/Spotify';\nimport Playlists from '..//Playlists/Playlists'; // import Track from '../Track/Track';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      \"searchResults\": [],\n      \"playlistName\": \"New Playlist\",\n      \"playlistTracks\": []\n    };\n    _this.addTrack = _this.addTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeTrack = _this.removeTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatePlaylistName = _this.updatePlaylistName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.savePlaylist = _this.savePlaylist.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.search = _this.search.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"addTrack\",\n    value: function addTrack(track) {\n      var tracks = this.state.playlistTracks;\n\n      if (!tracks.find(function (trackIndex) {\n        return trackIndex.id === track.id;\n      })) {\n        tracks.push(track);\n        this.setState({\n          playlistTracks: tracks\n        });\n      }\n    }\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack(track) {\n      var tracks = this.state.playlistTracks;\n      var newTracks = tracks.filter(function (trackIndex) {\n        return trackIndex.id !== track.id;\n      });\n      this.setState({\n        playlistTracks: newTracks\n      });\n    }\n  }, {\n    key: \"updatePlaylistName\",\n    value: function updatePlaylistName(name) {\n      this.setState({\n        playlistName: name\n      });\n    }\n  }, {\n    key: \"savePlaylist\",\n    value: function savePlaylist() {\n      var _this2 = this;\n\n      var tracks = this.state.playlistTracks;\n\n      if (tracks.length && this.state.playlistName) {\n        var trackURIs = tracks.map(function (trackIndex) {\n          return trackIndex.uri;\n        });\n        Spotify.savePlaylist(this.state.playlistName, trackURIs).then(function () {\n          _this2.setState({\n            playlistName: 'New Playlist',\n            playlistTracks: []\n          });\n\n          document.getElementById('Playlist-name').value = _this2.state.playlistName;\n        });\n      }\n    }\n  }, {\n    key: \"search\",\n    value: function search(searchTerm) {\n      var _this3 = this;\n\n      Spotify.search(searchTerm).then(function (results) {\n        _this3.setState({\n          searchResults: results\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Ja\", React.createElement(\"span\", {\n        className: \"highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"mmm\"), \"ing\"), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        onSearch: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App-playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(SearchResults, {\n        searchResults: this.state.searchResults,\n        onAdd: this.addTrack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(PlayList, {\n        playlistName: this.state.playlistName,\n        playlistTracks: this.state.playlistTracks,\n        onRemove: this.removeTrack,\n        onNameChange: this.updatePlaylistName,\n        onSave: this.savePlaylist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/src/Components/App/App.js"],"names":["React","Component","Playlist","SearchBar","SearchResults","Spotify","Playlists","App","props","state","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tracks","playlistTracks","find","trackIndex","id","push","setState","newTracks","filter","name","playlistName","length","trackURIs","map","uri","then","document","getElementById","value","searchTerm","results","searchResults"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Spotify from '../../Util/Spotify';\nimport Playlists from '..//Playlists/Playlists';\n// import Track from '../Track/Track';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"searchResults\": [],\n      \"playlistName\": \"New Playlist\",\n      \"playlistTracks\": []\n    };\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (!tracks.find(trackIndex => trackIndex.id === track.id)) {\n      tracks.push(track);\n      this.setState({playlistTracks: tracks});\n    }\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    let newTracks = tracks.filter(trackIndex => trackIndex.id !== track.id);\n    this.setState({playlistTracks: newTracks});\n\n  }\n\n  updatePlaylistName(name) {\n    this.setState({playlistName: name});\n  }\n\n  savePlaylist() {\n    let tracks = this.state.playlistTracks;\n    if(tracks.length && this.state.playlistName) {\n      let trackURIs = tracks.map(trackIndex => trackIndex.uri);\n      Spotify.savePlaylist(this.state.playlistName, trackURIs).then(() => {\n        this.setState({\n          playlistName: 'New Playlist',\n          playlistTracks: []\n        });\n        document.getElementById('Playlist-name').value = this.state.playlistName;\n      });\n    }\n  }\n\n  search(searchTerm) {\n    Spotify.search(searchTerm).then(results => {\n      this.setState({searchResults: results});\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n            <PlayList playlistName={this.state.playlistName} playlistTracks={this.state.playlistTracks} onRemove={this.removeTrack} onNameChange={this.updatePlaylistName} onSave={this.savePlaylist} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}