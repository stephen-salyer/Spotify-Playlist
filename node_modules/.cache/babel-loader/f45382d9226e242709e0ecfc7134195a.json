{"ast":null,"code":"import _classCallCheck from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/src/Components/Track/Track.js\";\nimport React from 'react';\nimport './Track.css';\nimport PropTypes from 'prop-types';\n\nvar Track =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Track, _React$Component);\n\n  function Track(props) {\n    var _this;\n\n    _classCallCheck(this, Track);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Track).call(this, props));\n    _this.addTrack = _this.addTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeTrack = _this.removeTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Track, [{\n    key: \"addTrack\",\n    value: function addTrack() {\n      this.props.onAdd(this.props.track);\n    }\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack() {\n      this.props.onRemove(this.props.track);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // @Reviewer the \"toggling\" logic is not very elegant...is there a better way?\n      return React.createElement(\"div\", {\n        className: \"Track\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Track-information\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.track.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.props.track.artist, \" | \", this.props.track.album)), this.props.shouldAdd && React.createElement(\"a\", {\n        className: \"Track-action\",\n        onClick: this.addTrack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"+\"), !this.props.shouldAdd && React.createElement(\"a\", {\n        className: \"Track-action\",\n        onClick: this.removeTrack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"-\"));\n    }\n  }]);\n\n  return Track;\n}(React.Component);\n\nexport default Track; // class Track extends React.Component {\n//   constructor(props) {\n//     super(props);\n//\n//     this.addTrack = this.addTrack.bind(this);\n//     this.removeTrack = this.removeTrack.bind(this);\n//   }\n//\n//   addTrack(event) {\n//     this.props.onAdd(this.props.track);\n//   }\n//\n//   removeTrack(event) {\n//     this.props.onRemove(this.props.track);\n//   }\n//\n//   renderAction() {\n//     if (this.props.isRemoval) {\n//       return <a className=\"Track-action\" onClick={this.removeTrack}>-</a>\n//     }\n//     return <a className=\"Track-action\" onClick={this.addTrack}>+</a>;\n//   }\n//\n//   render() {\n//     return (\n//       <div className=\"Track\">\n//         <div className=\"Track-information\">\n//           <h3>{this.props.track.name}</h3>\n//           <p>{this.props.track.artist} | {this.props.track.album}</p>\n//         </div>\n//         {this.renderAction()}\n//       </div>\n//     );\n//   }\n// }\n//\n// export default Track;","map":{"version":3,"sources":["/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/src/Components/Track/Track.js"],"names":["React","PropTypes","Track","props","addTrack","bind","removeTrack","onAdd","track","onRemove","name","artist","album","shouldAdd","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAGMC,K;;;;;AAEF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AAHe;AAIlB;;;;+BAEU;AACP,WAAKF,KAAL,CAAWI,KAAX,CAAiB,KAAKJ,KAAL,CAAWK,KAA5B;AACH;;;kCAEa;AACV,WAAKL,KAAL,CAAWM,QAAX,CAAoB,KAAKN,KAAL,CAAWK,KAA/B;AACH;;;6BAEQ;AACL;AACA,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKL,KAAL,CAAWK,KAAX,CAAiBE,IAAtB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKP,KAAL,CAAWK,KAAX,CAAiBG,MAArB,SAAgC,KAAKR,KAAL,CAAWK,KAAX,CAAiBI,KAAjD,CAFJ,CADJ,EAKK,KAAKT,KAAL,CAAWU,SAAX,IAAwB;AAAG,QAAA,SAAS,EAAC,cAAb;AAA4B,QAAA,OAAO,EAAE,KAAKT,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAL7B,EAMK,CAAC,KAAKD,KAAL,CAAWU,SAAZ,IAAyB;AAAG,QAAA,SAAS,EAAC,cAAb;AAA4B,QAAA,OAAO,EAAE,KAAKP,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAN9B,CADJ;AAUH;;;;EA5BeN,KAAK,CAACc,S;;AA+B1B,eAAeZ,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport './Track.css';\nimport PropTypes from 'prop-types';\n\n\nclass Track extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.addTrack = this.addTrack.bind(this);\n        this.removeTrack = this.removeTrack.bind(this);\n    }\n\n    addTrack() {\n        this.props.onAdd(this.props.track);\n    }\n\n    removeTrack() {\n        this.props.onRemove(this.props.track);\n    }\n\n    render() {\n        // @Reviewer the \"toggling\" logic is not very elegant...is there a better way?\n        return (\n            <div className=\"Track\">\n                <div className=\"Track-information\">\n                    <h3>{this.props.track.name}</h3>\n                    <p>{this.props.track.artist} | {this.props.track.album}</p>\n                </div>\n                {this.props.shouldAdd && <a className=\"Track-action\" onClick={this.addTrack}>+</a>}\n                {!this.props.shouldAdd && <a className=\"Track-action\" onClick={this.removeTrack}>-</a>}\n            </div>\n        )\n    }\n}\n\nexport default Track;\n\n// class Track extends React.Component {\n//   constructor(props) {\n//     super(props);\n//\n//     this.addTrack = this.addTrack.bind(this);\n//     this.removeTrack = this.removeTrack.bind(this);\n//   }\n//\n//   addTrack(event) {\n//     this.props.onAdd(this.props.track);\n//   }\n//\n//   removeTrack(event) {\n//     this.props.onRemove(this.props.track);\n//   }\n//\n//   renderAction() {\n//     if (this.props.isRemoval) {\n//       return <a className=\"Track-action\" onClick={this.removeTrack}>-</a>\n//     }\n//     return <a className=\"Track-action\" onClick={this.addTrack}>+</a>;\n//   }\n//\n//   render() {\n//     return (\n//       <div className=\"Track\">\n//         <div className=\"Track-information\">\n//           <h3>{this.props.track.name}</h3>\n//           <p>{this.props.track.artist} | {this.props.track.album}</p>\n//         </div>\n//         {this.renderAction()}\n//       </div>\n//     );\n//   }\n// }\n//\n// export default Track;\n"]},"metadata":{},"sourceType":"module"}