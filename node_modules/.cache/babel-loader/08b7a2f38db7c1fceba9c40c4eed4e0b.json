{"ast":null,"code":"import _classCallCheck from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\nimport SearchResults from '../SearchResults/SearchResults';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      searchResults: [],\n      playlistName: 'New Playlist',\n      playListTracks: []\n    };\n    _this.search = _this.search.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addTrack = _this.addTracl.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeTrack = _this.removetrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatePlaylistName = _this.updatePlaylistNamebing(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.savePlaylist = _this.savePlaylist.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"search\",\n    value: function search(term) {\n      var _this2 = this;\n\n      Spotify.search(term).then(function (searchResaults) {\n        _this2.setState({\n          searchresaults: searchResaults\n        });\n      });\n    }\n  }, {\n    key: \"addTrack\",\n    value: function addTrack(track) {\n      var tracks = this.state.playlistTracks;\n      tracks.push(track);\n      this.setState({\n        playlistTracks: tracks\n      });\n    }\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack(track) {\n      var tracks = this.state.playlistTracks;\n      tracks = tracks.filter(function (currentTrack) {\n        return currentTrack.id !== track.id;\n      });\n      this.setState({\n        playlistTracks: tracks\n      });\n    }\n  }, {\n    key: \"updatePlaylistName\",\n    value: function updatePlaylistName(name) {\n      this.setState({\n        playlistName: name\n      });\n    }\n  }, {\n    key: \"savePlaylist\",\n    value: function savePlaylist() {\n      var _this3 = this;\n\n      var trackUris = this.state.playlistTracks.map(function (track) {\n        return track.uri;\n      });\n      Spotify.savePlaylist(this.state.playlistName, trackUris).then(function () {\n        _this3.setState({\n          playlistName: 'New Playlist',\n          playlistTracks: []\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Ja\", React.createElement(\"span\", {\n        className: \"highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"mmm\"), \"ing\"), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        onSearch: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App-playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(SearchResults, {\n        searchResults: this.state.searchResults,\n        onAdd: this.addTrack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Playlist, {\n        playlistTracks: this.state.playlistTracks,\n        onNameChange: this.updatePlaylistName,\n        onRemove: this.removeTrack,\n        onSave: this.savePlaylist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/src/App.js"],"names":["React","SearchBar","Playlist","Spotify","SearchResults","App","props","state","searchResults","playlistName","playListTracks","search","bind","addTrack","addTracl","removeTrack","removetrack","updatePlaylistName","updatePlaylistNamebing","savePlaylist","term","then","searchResaults","setState","searchresaults","track","tracks","playlistTracks","push","filter","currentTrack","id","name","trackUris","map","uri","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\nimport SearchResults from '../SearchResults/SearchResults';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchResults: [],\n      playlistName: 'New Playlist',\n      playListTracks: []\n    };\n\n    this.search = this.search.bind(this);\n    this.addTrack = this.addTracl.bind(this);\n    this.removeTrack = this.removetrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistNamebing(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResaults => {\n      this.setState({searchresaults: searchResaults});\n    });\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks.push(track);\n\n    this.setState({playlistTracks: tracks});\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n\n    this.setState({playlistTracks: tracks});\n  }\n\n  updatePlaylistName(name) {\n    this.setState({playlistName: name});\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.searchResults}\n                           onAdd={this.addTrack} />\n            <Playlist playlistTracks={this.state.playlistTracks}\n                      onNameChange={this.updatePlaylistName}\n                      onRemove={this.removeTrack}\n                      onSave={this.savePlaylist} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}