{"ast":null,"code":"import _classCallCheck from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Spotify from '../../Util/Spotify'; // import Track from '../Track/Track';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      searchResults: [],\n      playlistName: 'New Playlist',\n      playlistTracks: []\n    };\n    _this.search = _this.search.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addTrack = _this.addTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeTrack = _this.removeTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatePlaylistName = _this.updatePlaylistName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.savePlaylist = _this.savePlaylist.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"search\",\n    value: function search(term) {\n      var _this2 = this;\n\n      Spotify.search(term).then(function (searchResults) {\n        _this2.setState({\n          searchResults: searchResults\n        });\n      });\n    }\n  }, {\n    key: \"addTrack\",\n    value: function addTrack(track) {\n      var tracks = this.state.playlistTracks;\n      tracks.push(track);\n      this.setState({\n        playlistTracks: tracks\n      });\n    }\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack(track) {\n      var tracks = this.state.playlistTracks;\n      tracks = tracks.filter(function (currentTrack) {\n        return currentTrack.id !== track.id;\n      });\n      this.setState({\n        playlistTracks: tracks\n      });\n    }\n  }, {\n    key: \"updatePlaylistName\",\n    value: function updatePlaylistName(name) {\n      this.setState({\n        playlistName: name\n      });\n    } // technical design start\n\n  }, {\n    key: \"playlistList\",\n    value: function playlistList() {\n      this.setState({\n        playlistList: {}\n      });\n    } // technical design end\n\n  }, {\n    key: \"savePlaylist\",\n    value: function savePlaylist() {\n      var _this3 = this;\n\n      var trackUris = this.state.playlistTracks.map(function (track) {\n        return track.uri;\n      });\n      Spotify.savePlaylist(this.state.playlistName, trackUris).then(function () {\n        _this3.setState({\n          playlistName: 'New Playlist',\n          playlistTracks: []\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Ja\", React.createElement(\"span\", {\n        className: \"highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"mmm\"), \"ing\"), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        onSearch: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App-playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(SearchResults, {\n        searchResults: this.state.searchResults,\n        onAdd: this.addTrack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Playlist, {\n        playlistTracks: this.state.playlistTracks,\n        onNameChange: this.updatePlaylistName,\n        onRemove: this.removeTrack,\n        onSave: this.savePlaylist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/stephensalyer/Documents/Spotify-playlist/spotify-playlist/src/Components/App/App.js"],"names":["React","Playlist","SearchBar","SearchResults","Spotify","App","props","state","searchResults","playlistName","playlistTracks","search","bind","addTrack","removeTrack","updatePlaylistName","savePlaylist","term","then","setState","track","tracks","push","filter","currentTrack","id","name","playlistList","trackUris","map","uri","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Spotify from '../../Util/Spotify';\n// import Track from '../Track/Track';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchResults: [],\n      playlistName: 'New Playlist',\n      playlistTracks: []\n    };\n\n    this.search = this.search.bind(this);\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      this.setState({searchResults: searchResults});\n    });\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks.push(track);\n\n    this.setState({playlistTracks: tracks});\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n\n    this.setState({playlistTracks: tracks});\n  }\n\n  updatePlaylistName(name) {\n    this.setState({playlistName: name});\n  }\n\n// technical design start\n  playlistList() {\n    this.setState({playlistList: {}});\n  }\n// technical design end\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.searchResults}\n                           onAdd={this.addTrack} />\n            <Playlist playlistTracks={this.state.playlistTracks}\n                      onNameChange={this.updatePlaylistName}\n                      onRemove={this.removeTrack}\n                      onSave={this.savePlaylist} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}